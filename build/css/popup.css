body {
  width: 400px;
}
.toggle-checkbox {
  display: none;
  visibility: none;
}
.toggle,
.toggle-button,
.toggle-content {
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}
.toggle-viewport {
  display: block;
  height: 75px;
  overflow: hidden;
  width: 200px;
  position: relative;
  margin: 30px auto 0;
  cursor: pointer;
}
.toggle {
  height: 100%;
  position: relative;
  width: 200%;
}
.toggle-button {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  background-color: #f2f2f2;
  position: absolute;
  display: block;
  top: 0;
  height: 75px;
  width: 75px;
  cursor: pointer;
}
.toggle-content {
  -webkit-box-shadow: rgba(0,0,0,0.2) 0 0 5px inset;
          box-shadow: rgba(0,0,0,0.2) 0 0 5px inset;
  background: rgba(157,38,29,0.5);
  cursor: pointer;
  display: inline-block;
  float: left;
  height: 100%;
  width: 162.5px;
  font-size: 37.5px;
  font-weight: bold;
  text-transform: uppercase;
  top: 10px;
}
.toggle-content span {
  text-shadow: rgba(0,0,0,0.1) 1px 1px 2px;
  height: 100%;
  line-height: 75px;
  margin: 0 20px;
  float: left;
}
.toggle-left {
  background-color: #59bdff;
}
.toggle-right {
  background-color: #ff4f51;
}
.toggle-right span {
  float: right;
}
.toggle-checkbox + .toggle-viewport > .toggle {
  left: 0;
}
.toggle-checkbox + .toggle-viewport .toggle-button {
  left: 125px;
}
.toggle-checkbox + .toggle-viewport .toggle-content {
  width: 162.5px;
}
.toggle-checkbox + .toggle-viewport .toggle-left {
  margin-left: 0;
}
.toggle-checkbox:checked + .toggle-viewport > .toggle {
  left: -100%;
}
.toggle-checkbox:checked + .toggle-viewport .toggle-button {
  left: 200px;
}
.toggle-checkbox:checked + .toggle-viewport .toggle-left {
  margin-left: 75px;
}
/*# sourceMappingURL=src/app/stylus/popup.css.map */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwL3N0eWx1cy9wb3B1cC5zdHlsIiwid2VicGFjazovLy8uL3BvcHVwLnN0eWwiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9zdHlsdXMvdG9nZ2xlLXN3aXRjaC5zdHlsIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0M7Q0NDQTtBQ0NEO0VBQ0M7RUFDQTtDRENBO0FDQ0Q7OztFQUdDO0VBQUE7Q0RDQTtBQ0NEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7Q0RDQTtBQ0NEO0VBQ0M7RUFDQTtFQUNBO0NEQ0E7QUNDRDtFQUNDO1VBQUE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDRENBO0FDQ0Q7RUFDQztVQUFBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7Q0RDQTtBQ0NBO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDRENEO0FDQ0Q7RUFDQztDRENBO0FDQ0Q7RUFDQztDRENBO0FDQ0E7RUFDQztDRENEO0FDS0M7RUFDQztDREhGO0FDS0M7RUFDQztDREhGO0FDS0M7RUFDQztDREhGO0FDS0M7RUFDQztDREhGO0FDT0M7RUFDQztDRExGO0FDT0M7RUFDQztDRExGO0FDT0M7RUFDQztDRExGO0FBQ0QiLCJmaWxlIjoiYnVpbGQvY3NzL3BvcHVwLmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHlcblx0d2lkdGggNDAwcHhcblxuQGltcG9ydCAndG9nZ2xlLXN3aXRjaCdcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBwL3N0eWx1cy9wb3B1cC5zdHlsIiwiYm9keSB7XG4gIHdpZHRoOiA0MDBweDtcbn1cbi50b2dnbGUtY2hlY2tib3gge1xuICBkaXNwbGF5OiBub25lO1xuICB2aXNpYmlsaXR5OiBub25lO1xufVxuLnRvZ2dsZSxcbi50b2dnbGUtYnV0dG9uLFxuLnRvZ2dsZS1jb250ZW50IHtcbiAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW4tb3V0O1xufVxuLnRvZ2dsZS12aWV3cG9ydCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDc1cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdpZHRoOiAyMDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDMwcHggYXV0byAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4udG9nZ2xlIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAyMDAlO1xufVxuLnRvZ2dsZS1idXR0b24ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0b3A6IDA7XG4gIGhlaWdodDogNzVweDtcbiAgd2lkdGg6IDc1cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi50b2dnbGUtY29udGVudCB7XG4gIGJveC1zaGFkb3c6IHJnYmEoMCwwLDAsMC4yKSAwIDAgNXB4IGluc2V0O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDE1NywzOCwyOSwwLjUpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZmxvYXQ6IGxlZnQ7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDE2Mi41cHg7XG4gIGZvbnQtc2l6ZTogMzcuNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdG9wOiAxMHB4O1xufVxuLnRvZ2dsZS1jb250ZW50IHNwYW4ge1xuICB0ZXh0LXNoYWRvdzogcmdiYSgwLDAsMCwwLjEpIDFweCAxcHggMnB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxpbmUtaGVpZ2h0OiA3NXB4O1xuICBtYXJnaW46IDAgMjBweDtcbiAgZmxvYXQ6IGxlZnQ7XG59XG4udG9nZ2xlLWxlZnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTliZGZmO1xufVxuLnRvZ2dsZS1yaWdodCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjRmNTE7XG59XG4udG9nZ2xlLXJpZ2h0IHNwYW4ge1xuICBmbG9hdDogcmlnaHQ7XG59XG4udG9nZ2xlLWNoZWNrYm94ICsgLnRvZ2dsZS12aWV3cG9ydCA+IC50b2dnbGUge1xuICBsZWZ0OiAwO1xufVxuLnRvZ2dsZS1jaGVja2JveCArIC50b2dnbGUtdmlld3BvcnQgLnRvZ2dsZS1idXR0b24ge1xuICBsZWZ0OiAxMjVweDtcbn1cbi50b2dnbGUtY2hlY2tib3ggKyAudG9nZ2xlLXZpZXdwb3J0IC50b2dnbGUtY29udGVudCB7XG4gIHdpZHRoOiAxNjIuNXB4O1xufVxuLnRvZ2dsZS1jaGVja2JveCArIC50b2dnbGUtdmlld3BvcnQgLnRvZ2dsZS1sZWZ0IHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG4udG9nZ2xlLWNoZWNrYm94OmNoZWNrZWQgKyAudG9nZ2xlLXZpZXdwb3J0ID4gLnRvZ2dsZSB7XG4gIGxlZnQ6IC0xMDAlO1xufVxuLnRvZ2dsZS1jaGVja2JveDpjaGVja2VkICsgLnRvZ2dsZS12aWV3cG9ydCAudG9nZ2xlLWJ1dHRvbiB7XG4gIGxlZnQ6IDIwMHB4O1xufVxuLnRvZ2dsZS1jaGVja2JveDpjaGVja2VkICsgLnRvZ2dsZS12aWV3cG9ydCAudG9nZ2xlLWxlZnQge1xuICBtYXJnaW4tbGVmdDogNzVweDtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPXNyYy9hcHAvc3R5bHVzL3BvcHVwLmNzcy5tYXAgKi9cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wb3B1cC5zdHlsIiwiJGhlaWdodCA9IDc1cHhcbiR3aWR0aCA9IDIwMHB4XG5cbi50b2dnbGUtY2hlY2tib3hcblx0ZGlzcGxheSBub25lXG5cdHZpc2liaWxpdHkgbm9uZVxuXG4udG9nZ2xlLFxuLnRvZ2dsZS1idXR0b24sXG4udG9nZ2xlLWNvbnRlbnRcblx0dHJhbnNpdGlvbiBhbGwgMzAwbXMgZWFzZS1pbi1vdXRcblxuLnRvZ2dsZS12aWV3cG9ydFxuXHRkaXNwbGF5IGJsb2NrXG5cdGhlaWdodCAkaGVpZ2h0XG5cdG92ZXJmbG93IGhpZGRlblxuXHR3aWR0aCAkd2lkdGhcblx0cG9zaXRpb24gcmVsYXRpdmVcblx0bWFyZ2luIDMwcHggYXV0byAwXG5cdGN1cnNvciBwb2ludGVyXG5cbi50b2dnbGVcblx0aGVpZ2h0IDEwMCVcblx0cG9zaXRpb24gcmVsYXRpdmVcblx0d2lkdGggMjAwJVxuXG4udG9nZ2xlLWJ1dHRvblxuXHRib3gtc2l6aW5nIGJvcmRlci1ib3hcblx0YmFja2dyb3VuZC1jb2xvciAjRjJGMkYyXG5cdHBvc2l0aW9uIGFic29sdXRlXG5cdGRpc3BsYXkgYmxvY2tcblx0dG9wIDBcblx0aGVpZ2h0ICRoZWlnaHRcblx0d2lkdGggJGhlaWdodFxuXHRjdXJzb3IgcG9pbnRlclxuXG4udG9nZ2xlLWNvbnRlbnRcblx0Ym94LXNoYWRvdyByZ2JhKDAsIDAsIDAsIDAuMikgMCAwIDVweCBpbnNldFxuXHRiYWNrZ3JvdW5kIHJnYmEoMTU3LCAzOCwgMjksIDAuNSlcblx0Y3Vyc29yIHBvaW50ZXJcblx0ZGlzcGxheSBpbmxpbmUtYmxvY2tcblx0ZmxvYXQgbGVmdCBcblx0aGVpZ2h0IDEwMCVcblx0d2lkdGggKCR3aWR0aCAtICgkaGVpZ2h0IC8gMikpXG5cdGZvbnQtc2l6ZSAoJGhlaWdodCAvIDIpXG5cdGZvbnQtd2VpZ2h0IGJvbGRcblx0dGV4dC10cmFuc2Zvcm0gdXBwZXJjYXNlXG5cdHRvcCAxMHB4XG5cblx0c3BhblxuXHRcdHRleHQtc2hhZG93IHJnYmEoMCwgMCwgMCwgMC4xKSAxcHggMXB4IDJweFxuXHRcdGhlaWdodCAxMDAlXG5cdFx0bGluZS1oZWlnaHQgJGhlaWdodFxuXHRcdG1hcmdpbiAwIDIwcHhcblx0XHRmbG9hdCBsZWZ0XG5cbi50b2dnbGUtbGVmdFxuXHRiYWNrZ3JvdW5kLWNvbG9yICM1OUJERkZcblx0XG4udG9nZ2xlLXJpZ2h0XG5cdGJhY2tncm91bmQtY29sb3IgI0ZGNEY1MVxuXG5cdHNwYW5cblx0XHRmbG9hdCByaWdodFxuXG4udG9nZ2xlLWNoZWNrYm94XG5cdFxuXHQmICsgLnRvZ2dsZS12aWV3cG9ydCBcblxuXHRcdD4gLnRvZ2dsZVxuXHRcdFx0bGVmdCAwXG5cblx0XHQudG9nZ2xlLWJ1dHRvblxuXHRcdFx0bGVmdCAoJHdpZHRoIC0gJGhlaWdodClcblxuXHRcdC50b2dnbGUtY29udGVudFxuXHRcdFx0d2lkdGggKCR3aWR0aCAtICgkaGVpZ2h0IC8gMikpXG5cdFx0XG5cdFx0LnRvZ2dsZS1sZWZ0XG5cdFx0XHRtYXJnaW4tbGVmdCAwXG5cdFxuXHQmOmNoZWNrZWQgKyAudG9nZ2xlLXZpZXdwb3J0IFxuXG5cdFx0PiAudG9nZ2xlXG5cdFx0XHRsZWZ0IC0xMDAlXG5cdFxuXHRcdC50b2dnbGUtYnV0dG9uXG5cdFx0XHRsZWZ0ICR3aWR0aFxuXHRcdFxuXHRcdC50b2dnbGUtbGVmdFxuXHRcdFx0bWFyZ2luLWxlZnQgJGhlaWdodFxuXHRcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBwL3N0eWx1cy90b2dnbGUtc3dpdGNoLnN0eWwiXSwic291cmNlUm9vdCI6IiJ9*/